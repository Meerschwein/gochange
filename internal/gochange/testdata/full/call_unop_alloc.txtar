-- file.go --
package p

type Iface interface{ Meth() }
type A struct{}

func (A) Meth() {}

func do(a A, fn func(A)) {
	func() { fn(a) }()
}

func do2(a A, fn func(Iface)) { // want `a could be Iface`
	func() { fn(a) }()
}

func do3(a Iface, fn func(Iface)) {
	func() { fn(a) }()
}

func test() {
	do(A{}, nil)
	do2(A{}, nil)
	do3(A{}, nil)
	do3(&A{}, nil)
}
-- file.go.golden --
package p

type Iface interface{ Meth() }
type A struct{}

func (A) Meth() {}

func do(a A, fn func(A)) {
	func() { fn(a) }()
}

func do2(a Iface, fn func(Iface)) { // want `a could be Iface`
	func() { fn(a) }()
}

func do3(a Iface, fn func(Iface)) {
	func() { fn(a) }()
}

func test() {
	do(A{}, nil)
	do2(A{}, nil)
	do3(A{}, nil)
	do3(&A{}, nil)
}
